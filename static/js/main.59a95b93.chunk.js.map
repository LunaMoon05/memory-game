{"version":3,"sources":["components/square/squareItem/squareItem.jsx","helpers/mixArr.js","components/square/square.jsx","assets/photos/redBackground.jpg","components/menu/menu.jsx","App.js","index.js"],"names":["SquareItem","clickHandler","checked","id","onClick","data-checked","className","mixArr","arr","map","i","Math","random","sort","Square","props","state","level","localStorage","getItem","Number","record","isGuessing","attempts","difficult","squaresArr","activeSquaresLength","handleClick","bind","this","squaresLength","newArr","push","guessed","sqrt","length","visibleArr","square","setState","setTimeout","initArr","e","updatedArr","isGuessed","target","filter","changeDifficultAndLevel","forEach","boolean","setItem","window","baf","recordText","squareWrapperWidth","squaresElements","data-type","style","color","maxWidth","React","Component","Menu","isResumeGame","App","useState","isOpenedMenu","setIsOpenedMenu","menuClickHandler","dataset","type","removeItem","backgroundImage","redBackground","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59a95b93.chunk.js","sourcesContent":["import './squareItem.scss'\r\n\r\nexport const SquareItem = ({clickHandler, checked, id}) => {\r\n  return (\r\n    <div onClick={clickHandler} id={id} data-checked={`${checked}`} className=\"square__item\"></div>\r\n  )\r\n}","export function mixArr(arr) { // Функция для перемешивания массива\r\n  return arr.map(i => [Math.random(), i]).sort().map(i => i[1])\r\n}","/* eslint-disable eqeqeq */\r\nimport './square.scss'\r\nimport { SquareItem } from './squareItem/squareItem'\r\nimport { mixArr } from '../../helpers/mixArr'\r\nimport React from 'react'\r\n\r\nexport class Square extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      level: localStorage.getItem('level') ? Number(localStorage.getItem('level')) : 2,\r\n      record: localStorage.getItem('record') ? Number(localStorage.getItem('record')) : 0,\r\n      isGuessing: false,\r\n      attempts: 0,\r\n      difficult: 0,\r\n      squaresArr: []\r\n    }\r\n    this.activeSquaresLength = 0\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n  initArr() {\r\n    const { level, difficult } = this.state\r\n    const squaresLength = level * level\r\n    let newArr = []\r\n    for (let i = 0; i < squaresLength; i++) {\r\n      newArr.push({\r\n        id: i + 1,\r\n        guessed: false,\r\n        checked: null\r\n      })\r\n    }\r\n    newArr = mixArr(newArr)\r\n    this.activeSquaresLength = Math.sqrt(newArr.length) - 1 + difficult\r\n    for (let i = 0; i < this.activeSquaresLength; i++) {\r\n      newArr[i].guessed = true\r\n    }\r\n    newArr = mixArr(newArr)\r\n    let visibleArr = newArr.map(square => {\r\n      if (square.guessed) {\r\n        return { ...square, checked: 'visible' }\r\n      } else { return square }\r\n    })\r\n    this.setState(state => {\r\n      return { ...state, isGuessing: true, squaresArr: visibleArr }\r\n    })\r\n    setTimeout(() => {\r\n      this.setState(state => {\r\n        return { ...state, isGuessing: false, squaresArr: newArr }\r\n      })\r\n    }, 2000)\r\n  }\r\n  componentDidMount() {\r\n    this.initArr()\r\n  }\r\n  handleClick(e) {\r\n    const { squaresArr, isGuessing } = this.state\r\n    if (!isGuessing) {\r\n      const updatedArr = squaresArr.map(square => {\r\n        const isGuessed = square.guessed\r\n        if (square.id == e.target.id) {\r\n          return { ...square, checked: isGuessed }\r\n        } else {\r\n          return square\r\n        }\r\n      })\r\n      this.setState(state => {\r\n        return { ...state, squaresArr: updatedArr }\r\n      })\r\n      let guessedArr = []\r\n      guessedArr = updatedArr.filter(square => {\r\n        if (square.guessed && square.checked === true) {\r\n          return square\r\n        }\r\n      })\r\n      if (guessedArr.length == this.activeSquaresLength) {\r\n        this.changeDifficultAndLevel(true)\r\n        setTimeout(() => {\r\n          this.initArr()\r\n        }, 500)\r\n      }\r\n      squaresArr.forEach(square => {\r\n        if (square.id == e.target.id) {\r\n          if (!square.guessed) {\r\n            this.changeDifficultAndLevel(false)\r\n            setTimeout(() => {\r\n              this.initArr()\r\n            }, 500)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  changeDifficultAndLevel(boolean) {\r\n    const { difficult, attempts, record, level } = this.state\r\n    if (boolean) {\r\n      if ((difficult + 1) >= 3) {\r\n        this.setState(state => {\r\n          return { ...state, level: level + 1, difficult: 0 }\r\n        })\r\n        if((level + 1) > record) {\r\n          this.setState(state => {\r\n            return {...state, record: level}\r\n          })\r\n          localStorage.setItem('record', record + 1)\r\n        }\r\n        localStorage.setItem('level', level + 1)\r\n        if (attempts < 3) {\r\n          this.setState(state => {\r\n            return { ...state, attempts: attempts + 1 }\r\n          })\r\n        }\r\n      } else {\r\n        this.setState(state => {\r\n          return { ...state, difficult: difficult + 1 }\r\n        })\r\n      }\r\n    } else {\r\n      if (attempts < 1) {\r\n        if (difficult <= 0) {\r\n          if (level > 2) {\r\n            this.setState(state => {\r\n              return { ...state, level: level - 1, difficult: 0 }\r\n            })\r\n            localStorage.setItem('level', level - 1)\r\n          }\r\n        } else {\r\n          this.setState(state => {\r\n            return { ...state, difficult: difficult - 1 }\r\n          })\r\n        }\r\n      } else {\r\n        this.setState(state => {\r\n          return { ...state, attempts: attempts - 1 }\r\n        })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    window.baf = this.state\r\n    const { squaresArr, attempts, record, level } = this.state\r\n    let recordText = record ? `${record} уровень` : 'рекорд еще не установлен!'\r\n    const { clickHandler } = this.props\r\n    const squareWrapperWidth = 60 * squaresArr.length / Math.sqrt(squaresArr.length)\r\n    const squaresElements = squaresArr.map((square, i) => {\r\n      return <SquareItem clickHandler={this.handleClick} checked={square.checked} id={square.id} key={i} />\r\n    })\r\n\r\n    return (\r\n      <div className=\"square\">\r\n        <button onClick={clickHandler} data-type=\"menu\" className=\"menu__btn menu__btn_game\">Выйти в меню</button>\r\n        <div className=\"square__info\">\r\n          <h1 style={record ? {color: 'darkorange'} : {color: 'white'}}>Твой рекорд: {recordText}</h1>\r\n          <p>Уровень: {level - 1}</p>\r\n          <p>Попыток: {attempts}</p>\r\n        </div>\r\n        <div className=\"square__field\">\r\n          <div style={{ maxWidth: squareWrapperWidth ? squareWrapperWidth : '' }} className=\"square__field-wrapper\">\r\n            {squaresElements}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/redBackground.b1cc509c.jpg\";","import './menu.scss'\r\nexport const Menu = ({clickHandler}) => {\r\n  let isResumeGame = localStorage.getItem('level')\r\n  return (\r\n    <div className=\"menu\">\r\n      {isResumeGame ? <button data-type=\"resume\" onClick={clickHandler} className=\"menu__btn\">Продолжить</button> : ''}\r\n      <button data-type=\"new\" onClick={clickHandler} className=\"menu__btn\">Новая игра</button>\r\n      <button onClick={clickHandler} className=\"menu__btn\">Настройки <span style={{color: 'red'}}>(в разработке)</span></button>\r\n    </div>    \r\n  )\r\n}","import './App.css'\nimport {Square} from './components/square/square.jsx'\nimport redBackground from './assets/photos/redBackground.jpg'\nimport { Menu } from './components/menu/menu'\nimport { useState } from 'react'\nimport {HashRouter} from 'react-router-dom'\n\nfunction App() {\n  const [isOpenedMenu, setIsOpenedMenu] = useState(true)\n  const menuClickHandler = e => {\n    switch (e.target.dataset.type) {\n      case 'resume':\n        setIsOpenedMenu(false)\n        break\n      case 'menu':\n        setIsOpenedMenu(true)\n        break\n      case 'new':\n        localStorage.removeItem('level')\n        setIsOpenedMenu(false)\n        break\n\n      default:\n        break\n    }\n  }\n  return (\n    <HashRouter>\n      <div style={{backgroundImage: `url(${redBackground})`}} className=\"App\">\n        {isOpenedMenu ? <Menu clickHandler={menuClickHandler} /> : <Square clickHandler={menuClickHandler} />}\n      </div>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}